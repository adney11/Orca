<?xml version="1.0" encoding="utf-8"  standalone="no"?>
<svg  onload="if (typeof(gnuplot_svg)!='undefined') gnuplot_svg.Init(evt)" 
 width="1024" height="512"
 viewBox="0 0 1024 512"
 xmlns="http://www.w3.org/2000/svg"
 xmlns:xlink="http://www.w3.org/1999/xlink"
>

<title>Throughput</title>
<desc>Produced by GNUPLOT 5.2 patchlevel 2 </desc>

<script type="text/javascript" > <![CDATA[
// Javascript routines for interaction with SVG documents produced by 
// gnuplot's SVG terminal driver.

// Find your root SVG element
var svg = document.querySelector('svg');

// Create an SVGPoint for future math
var pt = svg.createSVGPoint();

// Get point in global SVG space
function cursorPoint(evt){
  pt.x = evt.clientX; pt.y = evt.clientY;
  return pt.matrixTransform(svg.getScreenCTM().inverse());
}

var gnuplot_svg = { };

gnuplot_svg.version = "17 February 2017";

gnuplot_svg.SVGDoc = null;
gnuplot_svg.SVGRoot = null;

gnuplot_svg.Init = function(e)
{
   gnuplot_svg.SVGDoc = e.target.ownerDocument;
   gnuplot_svg.SVGRoot = gnuplot_svg.SVGDoc.documentElement;
   gnuplot_svg.axisdate = new Date();
}

gnuplot_svg.toggleVisibility = function(evt, targetId)
{
   var newTarget = evt.target;
   if (targetId)
      newTarget = gnuplot_svg.SVGDoc.getElementById(targetId);

   var newValue = newTarget.getAttributeNS(null, 'visibility')

   if ('hidden' != newValue)
      newValue = 'hidden';
   else
      newValue = 'visible';

   newTarget.setAttributeNS(null, 'visibility', newValue);

   if (targetId) {
      newTarget = gnuplot_svg.SVGDoc.getElementById(targetId.concat("_keyentry"));
      if (newTarget)
         newTarget.setAttributeNS(null, 'style',
		newValue == 'hidden' ? 'filter:url(#greybox)' : 'none');
   }

   evt.preventDefault();
   evt.stopPropagation();
}

// Mouse tracking echos coordinates to a floating text box

gnuplot_svg.getText = function() {
	return(document.getElementById("coord_text"));
}

gnuplot_svg.updateCoordBox = function(t, evt) {
    /* 
     * Apply screen CTM transformation to the evt screenX and screenY to get 
     * coordinates in SVG coordinate space.  Use scaling parameters stored in
     * the plot document by gnuplot to convert further into plot coordinates.
     * Then position the floating text box using the SVG coordinates.
     */
    var m = document.documentElement.getScreenCTM();
    var p = document.documentElement.createSVGPoint(); 
    var loc = cursorPoint(evt);
    p.x = loc.x;
    p.y = loc.y;
    var label_x, label_y;

    // Allow for scrollbar position (Firefox, others?)
    if (typeof evt.pageX != 'undefined') {
        p.x = evt.pageX; p.y = evt.pageY; 
    }
    t.setAttribute("x", p.x);
    t.setAttribute("y", p.y);
   
    var plotcoord = gnuplot_svg.mouse2plot(p.x,p.y);

    if (gnuplot_svg.plot_timeaxis_x == "DMS" || gnuplot_svg.plot_timeaxis_y == "DMS") {
	if (gnuplot_svg.plot_timeaxis_x == "DMS")
	    label_x = gnuplot_svg.convert_to_DMS(x);
	else
	    label_x = plotcoord.x.toFixed(2);
	if (gnuplot_svg.plot_timeaxis_y == "DMS")
	    label_y = gnuplot_svg.convert_to_DMS(y);
	else
	    label_y = plotcoord.y.toFixed(2);

    } else if (gnuplot_svg.polar_mode) {
	polar = gnuplot_svg.convert_to_polar(plotcoord.x,plotcoord.y);
	label_x = "ang= " + polar.ang.toPrecision(4);
	label_y = "R= " + polar.r.toPrecision(4);

    } else if (gnuplot_svg.plot_timeaxis_x == "Date") {
	gnuplot_svg.axisdate.setTime(1000. * plotcoord.x);
	var year = gnuplot_svg.axisdate.getUTCFullYear();
	var month = gnuplot_svg.axisdate.getUTCMonth();
	var date = gnuplot_svg.axisdate.getUTCDate();
	label_x = (" " + date).slice (-2) + "/"
		+ ("0" + (month+1)).slice (-2) + "/"
		+ year;
	label_y = plotcoord.y.toFixed(2);
    } else if (gnuplot_svg.plot_timeaxis_x == "Time") {
	gnuplot_svg.axisdate.setTime(1000. * plotcoord.x);
	var hour = gnuplot_svg.axisdate.getUTCHours();
	var minute = gnuplot_svg.axisdate.getUTCMinutes();
	var second = gnuplot_svg.axisdate.getUTCSeconds();
	label_x = ("0" + hour).slice (-2) + ":" 
		+ ("0" + minute).slice (-2) + ":"
		+ ("0" + second).slice (-2);
	label_y = plotcoord.y.toFixed(2);
    } else if (gnuplot_svg.plot_timeaxis_x == "DateTime") {
	gnuplot_svg.axisdate.setTime(1000. * plotcoord.x);
	label_x = gnuplot_svg.axisdate.toUTCString();
	label_y = plotcoord.y.toFixed(2);
    } else {
	label_x = plotcoord.x.toFixed(2);
	label_y = plotcoord.y.toFixed(2);
    }

    while (null != t.firstChild) {
    	t.removeChild(t.firstChild);
    }
    var textNode = document.createTextNode(".  "+label_x+" "+label_y);
    t.appendChild(textNode);
}

gnuplot_svg.showCoordBox = function(evt) {
    var t = gnuplot_svg.getText();
    if (null != t) {
    	t.setAttribute("visibility", "visible");
    	gnuplot_svg.updateCoordBox(t, evt);
    }
}

gnuplot_svg.moveCoordBox = function(evt) {
    var t = gnuplot_svg.getText();
    if (null != t)
    	gnuplot_svg.updateCoordBox(t, evt);
}

gnuplot_svg.hideCoordBox = function(evt) {
    var t = gnuplot_svg.getText();
    if (null != t)
    	t.setAttribute("visibility", "hidden");
}

gnuplot_svg.toggleCoordBox = function(evt) {
    var t = gnuplot_svg.getText();
    if (null != t) {
	var state = t.getAttribute('visibility');
	if ('hidden' != state)
	    state = 'hidden';
	else
	    state = 'visible';
	t.setAttribute('visibility', state);
    }
}

gnuplot_svg.toggleGrid = function() {
    if (!gnuplot_svg.SVGDoc.getElementsByClassName) // Old browsers
	return;
    var grid = gnuplot_svg.SVGDoc.getElementsByClassName('gridline');
    for (var i=0; i<grid.length; i++) {
	var state = grid[i].getAttribute('visibility');
	grid[i].setAttribute('visibility', (state == 'hidden') ? 'visible' : 'hidden');
    }
}

gnuplot_svg.showHypertext = function(evt, mouseovertext)
{
    var lines = mouseovertext.split('\n');

    // If text starts with "image:" process it as an xlinked bitmap
    if (lines[0].substring(0,5) == "image") {
	var nameindex = lines[0].indexOf(":");
	if (nameindex > 0) {
	    gnuplot_svg.showHyperimage(evt, lines[0]);
	    lines[0] = lines[0].slice(nameindex+1);
	}
    }

    var loc = cursorPoint(evt);
    var anchor_x = loc.x;
    var anchor_y = loc.y;
	
    var hypertextbox = document.getElementById("hypertextbox")
    hypertextbox.setAttributeNS(null,"x",anchor_x+10);
    hypertextbox.setAttributeNS(null,"y",anchor_y+4);
    hypertextbox.setAttributeNS(null,"visibility","visible");

    var hypertext = document.getElementById("hypertext")
    hypertext.setAttributeNS(null,"x",anchor_x+14);
    hypertext.setAttributeNS(null,"y",anchor_y+18);
    hypertext.setAttributeNS(null,"visibility","visible");

    var height = 2+16*lines.length;
    hypertextbox.setAttributeNS(null,"height",height);
    var length = hypertext.getComputedTextLength();
    hypertextbox.setAttributeNS(null,"width",length+8);

    // bounce off frame bottom
    if (anchor_y > gnuplot_svg.plot_ybot + 16 - height) {
	anchor_y -= height;
	hypertextbox.setAttributeNS(null,"y",anchor_y+4);
	hypertext.setAttributeNS(null,"y",anchor_y+18);
    }

    while (null != hypertext.firstChild) {
        hypertext.removeChild(hypertext.firstChild);
    }

    var textNode = document.createTextNode(lines[0]);

    if (lines.length <= 1) {
	hypertext.appendChild(textNode);
    } else {
	xmlns="http://www.w3.org/2000/svg";
	var tspan_element = document.createElementNS(xmlns, "tspan");
	tspan_element.appendChild(textNode);
	hypertext.appendChild(tspan_element);
	length = tspan_element.getComputedTextLength();
	var ll = length;

	for (var l=1; l<lines.length; l++) {
	    var tspan_element = document.createElementNS(xmlns, "tspan");
	    tspan_element.setAttributeNS(null,"dy", 16);
	    textNode = document.createTextNode(lines[l]);
	    tspan_element.appendChild(textNode);
	    hypertext.appendChild(tspan_element);

	    ll = tspan_element.getComputedTextLength();
	    if (length < ll) length = ll;
	}
	hypertextbox.setAttributeNS(null,"width",length+8);
    }

    // bounce off right edge
    if (anchor_x > gnuplot_svg.plot_xmax + 14 - length) {
	anchor_x -= length;
	hypertextbox.setAttributeNS(null,"x",anchor_x+10);
	hypertext.setAttributeNS(null,"x",anchor_x+14);
    }

    // left-justify multiline text
    var tspan_element = hypertext.firstChild;
    while (tspan_element) {
	tspan_element.setAttributeNS(null,"x",anchor_x+14);
	tspan_element = tspan_element.nextElementSibling;
    }

}

gnuplot_svg.hideHypertext = function ()
{
    var hypertextbox = document.getElementById("hypertextbox")
    var hypertext = document.getElementById("hypertext")
    var hyperimage = document.getElementById("hyperimage")
    hypertextbox.setAttributeNS(null,"visibility","hidden");
    hypertext.setAttributeNS(null,"visibility","hidden");
    hyperimage.setAttributeNS(null,"visibility","hidden");
}

gnuplot_svg.showHyperimage = function(evt, linktext)
{
    var loc = cursorPoint(evt);
    var anchor_x = loc.x;
    var anchor_y = loc.y;
    // Allow for scrollbar position (Firefox, others?)
    if (typeof evt.pageX != 'undefined') {
        anchor_x = evt.pageX; anchor_y = evt.pageY; 
    }

    var hyperimage = document.getElementById("hyperimage")
    hyperimage.setAttributeNS(null,"x",anchor_x);
    hyperimage.setAttributeNS(null,"y",anchor_y);
    hyperimage.setAttributeNS(null,"visibility","visible");

    // Pick up height and width from "image(width,height):name"
    var width = hyperimage.getAttributeNS(null,"width");
    var height = hyperimage.getAttributeNS(null,"height");
    if (linktext.charAt(5) == "(") {
	width = parseInt(linktext.slice(6));
	height = parseInt(linktext.slice(linktext.indexOf(",") + 1));
	hyperimage.setAttributeNS(null,"width",width);
	hyperimage.setAttributeNS(null,"height",height);
	hyperimage.setAttributeNS(null,"preserveAspectRatio","none");
    }

    // bounce off frame bottom and right
    if (anchor_y > gnuplot_svg.plot_ybot + 50 - height)
	hyperimage.setAttributeNS(null,"y",20 + anchor_y-height);
    if (anchor_x > gnuplot_svg.plot_xmax + 150 - width)
	hyperimage.setAttributeNS(null,"x",10 + anchor_x-width);

    // attach image URL as a link
    linktext = linktext.slice(linktext.indexOf(":") + 1);
    var xlinkns = "http://www.w3.org/1999/xlink";
    hyperimage.setAttributeNS(xlinkns,"xlink:href",linktext);
}

// Convert from svg panel mouse coordinates to the coordinate
// system of the gnuplot figure
gnuplot_svg.mouse2plot = function(mousex,mousey) {
    var plotcoord = new Object;
    var plotx = mousex - gnuplot_svg.plot_xmin;
    var ploty = mousey - gnuplot_svg.plot_ybot;
    var x,y;

    if (gnuplot_svg.plot_logaxis_x != 0) {
	x = Math.log(gnuplot_svg.plot_axis_xmax)
	  - Math.log(gnuplot_svg.plot_axis_xmin);
	x = x * (plotx / (gnuplot_svg.plot_xmax - gnuplot_svg.plot_xmin))
	  + Math.log(gnuplot_svg.plot_axis_xmin);
	x = Math.exp(x);
    } else {
	x = gnuplot_svg.plot_axis_xmin + (plotx / (gnuplot_svg.plot_xmax-gnuplot_svg.plot_xmin)) * (gnuplot_svg.plot_axis_xmax - gnuplot_svg.plot_axis_xmin);
    }

    if (gnuplot_svg.plot_logaxis_y != 0) {
	y = Math.log(gnuplot_svg.plot_axis_ymax)
	  - Math.log(gnuplot_svg.plot_axis_ymin);
	y = y * (ploty / (gnuplot_svg.plot_ytop - gnuplot_svg.plot_ybot))
	  + Math.log(gnuplot_svg.plot_axis_ymin);
	y = Math.exp(y);
    } else {
	y = gnuplot_svg.plot_axis_ymin + (ploty / (gnuplot_svg.plot_ytop-gnuplot_svg.plot_ybot)) * (gnuplot_svg.plot_axis_ymax - gnuplot_svg.plot_axis_ymin);
    }

    plotcoord.x = x;
    plotcoord.y = y;
    return plotcoord;
}

gnuplot_svg.convert_to_polar = function (x,y)
{
    polar = new Object;
    var phi, r;
    phi = Math.atan2(y,x);
    if (gnuplot_svg.plot_logaxis_r) 
        r = Math.exp( (x/Math.cos(phi) + Math.log(gnuplot_svg.plot_axis_rmin)/Math.LN10) * Math.LN10);
    else if (gnuplot_svg.plot_axis_rmin > gnuplot_svg.plot_axis_rmax)
        r = gnuplot_svg.plot_axis_rmin - x/Math.cos(phi);
    else
        r = gnuplot_svg.plot_axis_rmin + x/Math.cos(phi);
    phi = phi * (180./Math.PI);
    if (gnuplot_svg.polar_sense < 0)
	phi = -phi;
    if (gnuplot_svg.polar_theta0 != undefined)
	phi = phi + gnuplot_svg.polar_theta0;
    if (phi > 180.)
	phi = phi - 360.;
    polar.r = r;
    polar.ang = phi;
    return polar;
}

gnuplot_svg.convert_to_DMS = function (x)
{
    var dms = {d:0, m:0, s:0};
    var deg = Math.abs(x);
    dms.d = Math.floor(deg);
    dms.m = Math.floor((deg - dms.d) * 60.);
    dms.s = Math.floor((deg - dms.d) * 3600. - dms.m * 60.);
    fmt = ((x<0)?"-":" ")
        + dms.d.toFixed(0) + "°"
	+ dms.m.toFixed(0) + "\""
	+ dms.s.toFixed(0) + "'";
    return fmt;
}
]]>
</script>

<!-- Tie mousing to entire bounding box of the plot -->
<rect x="0" y="0" width="1024" height="512" fill="#ffffff" stroke="black" stroke-width="1"
onclick="gnuplot_svg.toggleCoordBox(evt)"  onmousemove="gnuplot_svg.moveCoordBox(evt)"/>

<!-- Also track mouse when it is on a plot element -->
<g id="gnuplot_canvas" onclick="gnuplot_svg.toggleCoordBox(evt)" onmousemove="gnuplot_svg.moveCoordBox(evt)">

<defs>

	<circle id='gpDot' r='0.5' stroke-width='0.5'/>
	<path id='gpPt0' stroke-width='0.222' stroke='currentColor' d='M-1,0 h2 M0,-1 v2'/>
	<path id='gpPt1' stroke-width='0.222' stroke='currentColor' d='M-1,-1 L1,1 M1,-1 L-1,1'/>
	<path id='gpPt2' stroke-width='0.222' stroke='currentColor' d='M-1,0 L1,0 M0,-1 L0,1 M-1,-1 L1,1 M-1,1 L1,-1'/>
	<rect id='gpPt3' stroke-width='0.222' stroke='currentColor' x='-1' y='-1' width='2' height='2'/>
	<rect id='gpPt4' stroke-width='0.222' stroke='currentColor' fill='currentColor' x='-1' y='-1' width='2' height='2'/>
	<circle id='gpPt5' stroke-width='0.222' stroke='currentColor' cx='0' cy='0' r='1'/>
	<use xlink:href='#gpPt5' id='gpPt6' fill='currentColor' stroke='none'/>
	<path id='gpPt7' stroke-width='0.222' stroke='currentColor' d='M0,-1.33 L-1.33,0.67 L1.33,0.67 z'/>
	<use xlink:href='#gpPt7' id='gpPt8' fill='currentColor' stroke='none'/>
	<use xlink:href='#gpPt7' id='gpPt9' stroke='currentColor' transform='rotate(180)'/>
	<use xlink:href='#gpPt9' id='gpPt10' fill='currentColor' stroke='none'/>
	<use xlink:href='#gpPt3' id='gpPt11' stroke='currentColor' transform='rotate(45)'/>
	<use xlink:href='#gpPt11' id='gpPt12' fill='currentColor' stroke='none'/>
	<path id='gpPt13' stroke-width='0.222' stroke='currentColor' d='M0,1.330 L1.265,0.411 L0.782,-1.067 L-0.782,-1.076 L-1.265,0.411 z'/>
	<use xlink:href='#gpPt13' id='gpPt14' fill='currentColor' stroke='none'/>
	<filter id='textbox' filterUnits='objectBoundingBox' x='0' y='0' height='1' width='1'>
	  <feFlood flood-color='white' flood-opacity='1' result='bgnd'/>
	  <feComposite in='SourceGraphic' in2='bgnd' operator='atop'/>
	</filter>
	<filter id='greybox' filterUnits='objectBoundingBox' x='0' y='0' height='1' width='1'>
	  <feFlood flood-color='lightgrey' flood-opacity='1' result='grey'/>
	  <feComposite in='SourceGraphic' in2='grey' operator='atop'/>
	</filter>
</defs>
<g fill="none" color="white" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="gray" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='rgb(187, 187, 187)' stroke-dasharray='2,4' class="gridline"  d='M63.6,454.4 L999.0,454.4  '/></g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M63.6,454.4 L72.6,454.4 M999.0,454.4 L990.0,454.4  '/>	<g transform="translate(55.3,458.3)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="end">
		<text><tspan font-family="Arial" > 0</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="gray" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='rgb(187, 187, 187)' stroke-dasharray='2,4' class="gridline"  d='M63.6,374.3 L999.0,374.3  '/></g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M63.6,374.3 L72.6,374.3 M999.0,374.3 L990.0,374.3  '/>	<g transform="translate(55.3,378.2)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="end">
		<text><tspan font-family="Arial" > 5</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="gray" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='rgb(187, 187, 187)' stroke-dasharray='2,4' class="gridline"  d='M63.6,294.3 L999.0,294.3  '/></g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M63.6,294.3 L72.6,294.3 M999.0,294.3 L990.0,294.3  '/>	<g transform="translate(55.3,298.2)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="end">
		<text><tspan font-family="Arial" > 10</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="gray" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='rgb(187, 187, 187)' stroke-dasharray='2,4' class="gridline"  d='M63.6,214.2 L999.0,214.2  '/></g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M63.6,214.2 L72.6,214.2 M999.0,214.2 L990.0,214.2  '/>	<g transform="translate(55.3,218.1)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="end">
		<text><tspan font-family="Arial" > 15</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="gray" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='rgb(187, 187, 187)' stroke-dasharray='2,4' class="gridline"  d='M63.6,134.2 L999.0,134.2  '/></g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M63.6,134.2 L72.6,134.2 M999.0,134.2 L990.0,134.2  '/>	<g transform="translate(55.3,138.1)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="end">
		<text><tspan font-family="Arial" > 20</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="gray" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='rgb(187, 187, 187)' stroke-dasharray='2,4' class="gridline"  d='M63.6,54.1 L999.0,54.1  '/></g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M63.6,54.1 L72.6,54.1 M999.0,54.1 L990.0,54.1  '/>	<g transform="translate(55.3,58.0)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="end">
		<text><tspan font-family="Arial" > 25</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M63.6,454.4 L63.6,445.4 M63.6,54.1 L63.6,63.1  '/>	<g transform="translate(63.6,476.3)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="middle">
		<text><tspan font-family="Arial" > 0</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M211.2,454.4 L211.2,445.4 M211.2,54.1 L211.2,63.1  '/>	<g transform="translate(211.2,476.3)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="middle">
		<text><tspan font-family="Arial" > 20</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M358.8,454.4 L358.8,445.4 M358.8,54.1 L358.8,63.1  '/>	<g transform="translate(358.8,476.3)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="middle">
		<text><tspan font-family="Arial" > 40</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M506.5,454.4 L506.5,445.4 M506.5,54.1 L506.5,63.1  '/>	<g transform="translate(506.5,476.3)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="middle">
		<text><tspan font-family="Arial" > 60</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M654.1,454.4 L654.1,445.4 M654.1,54.1 L654.1,63.1  '/>	<g transform="translate(654.1,476.3)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="middle">
		<text><tspan font-family="Arial" > 80</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M801.7,454.4 L801.7,445.4 M801.7,54.1 L801.7,63.1  '/>	<g transform="translate(801.7,476.3)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="middle">
		<text><tspan font-family="Arial" > 100</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M949.4,454.4 L949.4,445.4 M949.4,54.1 L949.4,63.1  '/>	<g transform="translate(949.4,476.3)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="middle">
		<text><tspan font-family="Arial" > 120</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M63.6,54.1 L63.6,454.4 L999.0,454.4 L999.0,54.1 L63.6,54.1 Z  '/></g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<g transform="translate(16.3,254.3) rotate(270)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="middle">
		<text><tspan font-family="Arial" >throughput (Mbits/s)</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<g transform="translate(531.3,503.3)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="middle">
		<text><tspan font-family="Arial" >time (s)</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
	<g id="Throughput_plot_1" ><title>Capacity (mean 7.26 Mbits/s)</title>
<g fill="none" color="white" stroke="currentColor" stroke-width="0.20" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="0.20" stroke-linecap="butt" stroke-linejoin="miter">
	<g id="Throughput_plot_1_keyentry" visibility="visible" onclick="gnuplot_svg.toggleVisibility(evt,'Throughput_plot_1')">
	<g transform="translate(472.5,21.9)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="end">
		<text><tspan font-family="Arial" >Capacity (mean 7.26 Mbits/s)</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="0.20" stroke-linecap="butt" stroke-linejoin="miter">
	<g stroke='none' shape-rendering='crispEdges'>
		<polygon fill = 'rgb(148,   0, 211)' fill-opacity = '0.200000' points = '480.8,22.5 523.0,22.5 523.0,13.5 480.8,13.5 '/>
	</g>
	</g>
	<g stroke='none' shape-rendering='crispEdges'>
		<polygon fill = 'rgb(148,   0, 211)' fill-opacity = '0.200000' points = '63.6,382.7 67.3,382.3 71.0,378.1 74.7,377.7 78.3,373.9 82.0,373.1 85.7,369.6 89.4,369.6 93.1,365.4 96.8,365.8 100.5,361.2 104.2,361.5 107.9,357.7 111.6,357.7 115.2,353.4 118.9,353.8
122.6,349.6 126.3,350.0 130.0,345.7 133.7,345.4 137.4,342.3 141.1,341.5 144.8,338.0 148.5,337.3 152.2,333.0 155.8,333.0 159.5,333.0 163.2,333.0 166.9,333.8 170.6,333.8 174.3,334.2 178.0,333.8
181.7,335.3 185.4,334.6 189.1,335.3 192.8,335.3 196.4,336.5 200.1,336.1 203.8,337.3 207.5,336.9 211.2,337.3 214.9,336.9 218.6,338.0 222.3,337.7 226.0,338.4 229.7,338.4 233.4,338.4 237.0,338.0
240.7,338.4 244.4,338.0 248.1,338.0 251.8,337.3 255.5,336.1 259.2,336.1 262.9,334.2 266.6,334.2 270.3,332.3 274.0,331.9 277.6,329.9 281.3,329.6 285.0,328.0 288.7,328.0 292.4,325.3 296.1,324.9
299.8,323.0 303.5,322.6 307.2,319.9 310.9,320.3 314.6,318.4 318.2,318.0 321.9,316.5 325.6,316.5 329.3,314.9 333.0,314.5 336.7,313.0 340.4,313.0 344.1,311.8 347.8,311.4 351.5,310.7 355.1,309.9
358.8,308.8 362.5,308.8 366.2,307.2 369.9,307.2 373.6,305.3 377.3,304.9 381.0,304.9 384.7,304.1 388.4,303.4 392.1,303.0 395.7,303.4 399.4,303.0 403.1,303.7 406.8,303.7 410.5,304.9 414.2,304.9
417.9,305.3 421.6,305.3 425.3,307.2 429.0,306.8 432.7,309.1 436.3,309.1 440.0,311.8 443.7,311.4 447.4,313.8 451.1,313.8 454.8,314.9 458.5,315.3 462.2,316.8 465.9,316.8 469.6,318.0 473.3,318.0
476.9,318.4 480.6,318.8 484.3,318.4 488.0,318.8 491.7,318.4 495.4,318.8 499.1,319.2 502.8,319.2 506.5,318.4 510.2,318.4 513.9,319.2 517.5,318.8 521.2,321.5 524.9,320.7 528.6,321.9 532.3,321.9
536.0,324.2 539.7,323.8 543.4,324.9 547.1,324.9 550.8,326.5 554.5,326.5 558.1,327.6 561.8,327.6 565.5,328.4 569.2,328.4 572.9,331.1 576.6,330.3 580.3,333.0 584.0,332.3 587.7,333.4 591.4,333.4
595.1,333.4 598.7,333.4 602.4,334.2 606.1,333.8 609.8,334.2 613.5,333.8 617.2,333.4 620.9,333.8 624.6,332.6 628.3,332.6 632.0,332.3 635.6,331.9 639.3,333.0 643.0,333.0 646.7,333.8 650.4,333.4
654.1,334.6 657.8,334.6 661.5,336.5 665.2,336.1 668.9,339.2 672.6,339.2 676.2,341.1 679.9,341.1 683.6,341.5 687.3,341.9 691.0,343.0 694.7,342.7 698.4,343.8 702.1,343.4 705.8,342.7 709.5,343.0
713.2,342.7 716.8,342.7 720.5,341.9 724.2,342.3 727.9,341.9 731.6,341.9 735.3,341.5 739.0,341.5 742.7,341.9 746.4,342.3 750.1,342.3 753.8,342.3 757.4,341.5 761.1,341.5 764.8,341.5 768.5,340.7
772.2,341.1 775.9,340.7 779.6,340.7 783.3,340.7 787.0,340.7 790.7,340.7 794.4,340.7 798.0,340.7 801.7,341.1 805.4,341.5 809.1,342.3 812.8,342.3 816.5,342.3 820.2,342.3 823.9,343.0 827.6,342.3
831.3,343.0 835.0,342.3 838.6,343.4 842.3,342.7 846.0,342.7 849.7,342.3 853.4,342.3 857.1,341.9 860.8,346.1 864.5,346.1 868.2,351.1 871.9,351.1 875.6,356.1 879.2,356.1 882.9,360.8 886.6,361.2
890.3,366.2 894.0,366.2 897.7,371.6 901.4,371.6 905.1,377.0 908.8,377.0 912.5,382.7 916.1,382.0 919.8,387.7 923.5,387.4 927.2,392.7 930.9,392.0 934.6,397.0 938.3,397.0 942.0,402.0 945.7,402.0
949.4,382.0 953.1,382.3 956.7,378.1 960.4,377.7 964.1,373.9 967.8,373.1 971.5,369.6 975.2,369.6 978.9,365.4 982.6,365.8 986.3,361.2 990.0,361.5 993.7,357.7 997.3,410.9 997.3,454.4 63.6,454.4
'/>
	</g>
</g>
	</g>
	<g id="Throughput_plot_2" ><title>Traffic ingress (mean 7.19 Mbits/s)</title>
<g fill="none" color="white" stroke="rgb(148,   0, 211)" stroke-width="1.25" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.25" stroke-linecap="butt" stroke-linejoin="miter">
	<g id="Throughput_plot_2_keyentry" visibility="visible" onclick="gnuplot_svg.toggleVisibility(evt,'Throughput_plot_2')">
	<g transform="translate(472.5,39.9)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="end">
		<text><tspan font-family="Arial" >Traffic ingress (mean 7.19 Mbits/s)</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.25" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='rgb(  0,  32, 160)'  d='M480.8,36.0 L523.0,36.0  '/>	</g>
	<path stroke='rgb(  0,  32, 160)'  d='M63.6,327.6 L67.3,264.3 L71.0,267.9 L74.7,310.7 L78.3,62.9 L82.0,279.5 L85.7,292.2 L89.4,254.0
		L93.1,192.8 L96.8,284.1 L100.5,221.3 L104.2,328.8 L107.9,386.6 L111.6,369.2 L115.2,358.8 L118.9,376.6
		L122.6,343.0 L126.3,372.7 L130.0,376.6 L133.7,339.6 L137.4,402.4 L141.1,344.6 L144.8,329.9 L148.5,358.1
		L152.2,331.9 L155.8,390.4 L159.5,345.0 L163.2,333.0 L166.9,381.2 L170.6,340.3 L174.3,305.7 L178.0,377.3
		L181.7,375.0 L185.4,301.8 L189.1,381.2 L192.8,316.1 L196.4,390.4 L200.1,300.7 L203.8,358.1 L207.5,378.9
		L211.2,323.4 L214.9,388.9 L218.6,378.1 L222.3,343.8 L226.0,371.2 L229.7,307.6 L233.4,372.3 L237.0,300.3
		L240.7,378.1 L244.4,300.3 L248.1,388.5 L251.8,346.5 L255.5,375.0 L259.2,345.7 L262.9,392.4 L266.6,296.8
		L270.3,355.8 L274.0,382.3 L277.6,296.8 L281.3,381.2 L285.0,302.2 L288.7,375.4 L292.4,351.5 L296.1,306.1
		L299.8,337.3 L303.5,336.5 L307.2,307.2 L310.9,371.2 L314.6,275.2 L318.2,363.9 L321.9,331.9 L325.6,308.4
		L329.3,374.6 L333.0,296.4 L336.7,356.5 L340.4,327.6 L344.1,311.4 L347.8,358.1 L351.5,274.1 L355.1,398.1
		L358.8,245.2 L362.5,354.2 L366.2,286.8 L369.9,327.2 L373.6,328.4 L377.3,302.2 L381.0,328.4 L384.7,301.8
		L388.4,372.7 L392.1,305.7 L395.7,296.8 L399.4,345.0 L403.1,296.0 L406.8,343.8 L410.5,333.8 L414.2,311.4
		L417.9,369.2 L421.6,272.9 L425.3,367.7 L429.0,303.7 L432.7,314.5 L436.3,360.0 L440.0,305.3 L443.7,325.7
		L447.4,308.0 L451.1,323.8 L454.8,311.1 L458.5,329.2 L462.2,366.2 L465.9,361.5 L469.6,320.7 L473.3,352.7
		L476.9,344.6 L480.6,302.2 L484.3,363.1 L488.0,329.2 L491.7,319.2 L495.4,369.6 L499.1,312.6 L502.8,382.3
		L506.5,325.3 L510.2,334.2 L513.9,378.1 L517.5,287.2 L521.2,365.0 L524.9,317.6 L528.6,348.8 L532.3,217.0
		L536.0,364.2 L539.7,355.0 L543.4,306.8 L547.1,390.8 L550.8,379.3 L554.5,316.8 L558.1,378.1 L561.8,296.8
		L565.5,353.4 L569.2,330.3 L572.9,334.2 L576.6,345.0 L580.3,332.6 L584.0,346.5 L587.7,336.1 L591.4,325.7
		L595.1,361.2 L598.7,346.5 L602.4,321.9 L606.1,331.9 L609.8,360.4 L613.5,277.5 L617.2,365.4 L620.9,316.5
		L624.6,384.3 L628.3,286.0 L632.0,400.8 L635.6,321.9 L639.3,394.3 L643.0,304.5 L646.7,326.5 L650.4,321.5
		L654.1,338.0 L657.8,378.9 L661.5,320.3 L665.2,358.1 L668.9,353.4 L672.6,328.8 L676.2,313.4 L679.9,389.7
		L683.6,318.8 L687.3,324.9 L691.0,349.2 L694.7,321.1 L698.4,367.3 L702.1,345.4 L705.8,368.1 L709.5,311.8
		L713.2,381.2 L716.8,293.3 L720.5,365.8 L724.2,370.0 L727.9,309.1 L731.6,377.7 L735.3,318.8 L739.0,379.6
		L742.7,309.1 L746.4,371.6 L750.1,296.8 L753.8,375.8 L757.4,353.1 L761.1,396.6 L764.8,332.6 L768.5,318.0
		L772.2,318.4 L775.9,356.5 L779.6,376.2 L783.3,313.0 L787.0,384.7 L790.7,265.6 L794.4,317.6 L798.0,401.6
		L801.7,333.0 L805.4,322.2 L809.1,383.9 L812.8,289.5 L816.5,350.4 L820.2,353.4 L823.9,343.8 L827.6,353.1
		L831.3,346.1 L835.0,377.3 L838.6,314.5 L842.3,355.0 L846.0,330.3 L849.7,312.2 L853.4,344.2 L857.1,346.9
		L860.8,312.6 L864.5,383.5 L868.2,352.7 L871.9,296.8 L875.6,380.4 L879.2,311.1 L882.9,348.1 L886.6,368.1
		L890.3,312.2 L894.0,335.0 L897.7,418.2 L901.4,304.1 L905.1,399.7 L908.8,318.0 L912.5,371.6 L916.1,363.5
		L919.8,406.6 L923.5,400.5 L927.2,270.2 L930.9,383.1 L934.6,317.6 L938.3,366.5 L942.0,392.4 L945.7,411.2
		L949.4,386.6 L953.1,331.9 L956.7,361.5 L960.4,378.5 L964.1,373.1 L967.8,378.9 L971.5,366.2 L975.2,368.9
		L978.9,364.2 L982.6,364.6 L986.3,361.2 L990.0,367.7 L993.7,356.1 L997.3,417.6  '/></g>
	</g>
	<g id="Throughput_plot_3" ><title>Traffic egress (mean 5.87 Mbits/s)</title>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.25" stroke-linecap="butt" stroke-linejoin="miter">
	<g id="Throughput_plot_3_keyentry" visibility="visible" onclick="gnuplot_svg.toggleVisibility(evt,'Throughput_plot_3')">
	<g transform="translate(821.8,21.9)" stroke="none" fill="black" font-family="Arial" font-size="12.00"  text-anchor="end">
		<text><tspan font-family="Arial" >Traffic egress (mean 5.87 Mbits/s)</tspan></text>
	</g>
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.25" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='rgb(255,  96,  64)'  d='M830.1,18.0 L872.3,18.0  '/>	</g>
	<path stroke='rgb(255,  96,  64)'  d='M63.6,393.9 L67.3,382.4 L71.0,378.1 L74.7,377.7 L78.3,373.9 L82.0,373.1 L85.7,369.6 L89.4,369.6
		L93.1,365.4 L96.8,365.8 L100.5,361.2 L104.2,361.5 L107.9,378.9 L111.6,373.1 L115.2,359.6 L118.9,384.7
		L122.6,363.1 L126.3,392.7 L130.0,373.1 L133.7,358.5 L137.4,398.9 L141.1,358.1 L144.8,365.8 L148.5,363.1
		L152.2,351.5 L155.8,384.7 L159.5,356.1 L163.2,351.9 L166.9,380.0 L170.6,353.8 L174.3,341.1 L178.0,368.1
		L181.7,374.3 L185.4,342.7 L189.1,370.8 L192.8,343.4 L196.4,380.8 L200.1,336.9 L203.8,366.9 L207.5,377.7
		L211.2,346.5 L214.9,383.9 L218.6,378.5 L222.3,354.2 L226.0,376.6 L229.7,338.4 L233.4,370.8 L237.0,338.0
		L240.7,377.0 L244.4,338.0 L248.1,389.7 L251.8,360.4 L255.5,375.0 L259.2,362.3 L262.9,381.6 L266.6,334.6
		L270.3,365.0 L274.0,372.3 L277.6,335.7 L281.3,370.4 L285.0,328.0 L288.7,379.6 L292.4,353.8 L296.1,329.6
		L299.8,357.3 L303.5,342.7 L307.2,337.3 L310.9,364.2 L314.6,319.2 L318.2,356.5 L321.9,348.4 L325.6,338.0
		L329.3,364.6 L333.0,316.8 L336.7,358.5 L340.4,347.3 L344.1,336.5 L347.8,348.4 L351.5,314.5 L355.1,392.0
		L358.8,308.8 L362.5,346.1 L366.2,321.9 L369.9,356.9 L373.6,328.4 L377.3,344.2 L381.0,327.2 L384.7,331.9
		L388.4,371.9 L392.1,324.9 L395.7,340.3 L399.4,350.8 L403.1,311.4 L406.8,365.8 L410.5,326.1 L414.2,345.4
		L417.9,360.0 L421.6,329.9 L425.3,359.2 L429.0,324.9 L432.7,336.1 L436.3,354.2 L440.0,315.3 L443.7,362.3
		L447.4,315.7 L451.1,359.2 L454.8,319.2 L458.5,354.2 L462.2,365.8 L465.9,361.2 L469.6,348.1 L473.3,345.7
		L476.9,344.6 L480.6,337.3 L484.3,370.8 L488.0,331.9 L491.7,361.5 L495.4,363.9 L499.1,326.1 L502.8,387.7
		L506.5,333.4 L510.2,351.9 L513.9,369.2 L517.5,320.7 L521.2,363.9 L524.9,331.5 L528.6,372.7 L532.3,321.9
		L536.0,358.8 L539.7,355.8 L543.4,324.9 L547.1,385.8 L550.8,379.3 L554.5,332.6 L558.1,383.1 L561.8,327.6
		L565.5,369.2 L569.2,335.3 L572.9,361.2 L576.6,336.5 L580.3,377.0 L584.0,342.3 L587.7,368.9 L591.4,339.2
		L595.1,371.6 L598.7,368.1 L602.4,366.2 L606.1,333.8 L609.8,370.0 L613.5,333.8 L617.2,359.6 L620.9,340.3
		L624.6,375.4 L628.3,332.6 L632.0,392.7 L635.6,340.7 L639.3,388.5 L643.0,337.3 L646.7,363.5 L650.4,333.4
		L654.1,363.9 L657.8,376.2 L661.5,349.2 L665.2,380.0 L668.9,348.1 L672.6,374.6 L676.2,341.1 L679.9,383.1
		L683.6,345.4 L687.3,369.6 L691.0,353.8 L694.7,362.3 L698.4,365.8 L702.1,366.2 L705.8,360.0 L709.5,358.1
		L713.2,379.3 L716.8,344.2 L720.5,366.5 L724.2,369.6 L727.9,343.4 L731.6,367.3 L735.3,355.4 L739.0,375.0
		L742.7,341.9 L746.4,361.9 L750.1,361.2 L753.8,378.1 L757.4,368.5 L761.1,389.3 L764.8,353.4 L768.5,374.6
		L772.2,342.3 L775.9,373.5 L779.6,367.3 L783.3,350.4 L787.0,373.9 L790.7,347.3 L794.4,340.7 L798.0,397.0
		L801.7,356.9 L805.4,368.9 L809.1,377.0 L812.8,346.5 L816.5,342.7 L820.2,385.8 L823.9,353.1 L827.6,383.5
		L831.3,350.8 L835.0,398.9 L838.6,343.4 L842.3,372.7 L846.0,350.8 L849.7,354.6 L853.4,349.2 L857.1,383.1
		L860.8,346.1 L864.5,378.1 L868.2,379.3 L871.9,351.1 L875.6,372.3 L879.2,377.3 L882.9,360.8 L886.6,370.4
		L890.3,379.3 L894.0,366.2 L897.7,411.2 L901.4,379.6 L905.1,391.2 L908.8,404.7 L912.5,382.7 L916.1,382.0
		L919.8,398.1 L923.5,410.5 L927.2,392.7 L930.9,392.0 L934.6,397.0 L938.3,397.0 L942.0,402.0 L945.7,408.2
		L949.4,403.9 L953.1,382.3 L956.7,378.1 L960.4,377.7 L964.1,373.9 L967.8,373.1 L971.5,369.6 L975.2,369.6
		L978.9,365.4 L982.6,366.2 L986.3,361.2 L990.0,361.5 L993.7,357.7 L997.3,411.4  '/></g>
	</g>
<g fill="none" color="white" stroke="rgb(255,  96,  64)" stroke-width="2.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="2.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="black" stroke="black" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
	<path stroke='black'  d='M63.6,54.1 L63.6,454.4 L999.0,454.4 L999.0,54.1 L63.6,54.1 Z  '/></g>
<g fill="none" color="black" stroke="currentColor" stroke-width="1.00" stroke-linecap="butt" stroke-linejoin="miter">
</g>

<script type="text/javascript"><![CDATA[
// plot boundaries and axis scaling information for mousing 
gnuplot_svg.plot_term_xmax = 1024;
gnuplot_svg.plot_term_ymax = 512;
gnuplot_svg.plot_xmin = 63.6;
gnuplot_svg.plot_xmax = 999.0;
gnuplot_svg.plot_ybot = 454.4;
gnuplot_svg.plot_ytop = 54.1;
gnuplot_svg.plot_width = 935.4;
gnuplot_svg.plot_height = 400.3;
gnuplot_svg.plot_axis_xmin = 0.003;
gnuplot_svg.plot_axis_xmax = 126.724;
gnuplot_svg.plot_axis_ymin = 0;
gnuplot_svg.plot_axis_ymax = 25;
gnuplot_svg.polar_mode = false;
gnuplot_svg.plot_axis_x2min = "none"
gnuplot_svg.plot_axis_y2min = "none"
gnuplot_svg.plot_logaxis_x = 0;
gnuplot_svg.plot_logaxis_y = 0;
gnuplot_svg.plot_timeaxis_x = "";
gnuplot_svg.plot_timeaxis_y = "";
]]>
</script>
</g>

  <text id="coord_text" text-anchor="start" pointer-events="none"
  font-size="12" font-family="Arial"
  visibility="hidden"> </text>

  <rect id="hypertextbox" class="hypertextbox" pointer-events="none"
  fill="white" stroke="black" opacity="0.8"
  height="16" visibility="hidden" />

  <text id="hypertext" class="hypertext" pointer-events="none"
  font-size="12" font-family="Arial"
  visibility="hidden"> </text>

  <image id="hyperimage" class="hyperimage" pointer-events="none"
  fill="white" stroke="black" opacity="0.8"
  height="200" width="300" visibility="hidden" />

  <image x='10' y='486' width='16' height='16' xlink:href='grid.png'
    onclick='gnuplot_svg.toggleGrid();'/>
</svg>

